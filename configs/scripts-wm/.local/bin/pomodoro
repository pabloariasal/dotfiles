#!/bin/bash

# 25 minutes as standard duration
DURATION=$((25 * 60))

FILE="${HOME}/.pomodoro"

function format_seconds {
  date -u -d "@$1" +%M:%S
}

function task_name {
  cat "$FILE" | tail -n 1
}

function read_duration {
  cat "$FILE" | head -n 1
}

function show {
    if [ -f "$FILE" ]; then
      local start=$(date -r $FILE +%s)
      local elapsed="$(( $(date +%s) - $start ))"
      local duration=$(read_duration)
      if [ "$elapsed" -eq "$duration" ]; then
        # pomodoro finished
        dunstify -u low "Pomodoro Finished for Task: $(task_name)"
      elif [ "$elapsed" -lt "$duration" ]; then
        # still running
        echo "$(format_seconds $elapsed)" - "$(task_name)"
      else
        # timedout
        echo "$(format_seconds $duration)" "DONE" - "$(task_name)"
      fi
    else
        echo "OFF"
    fi
}

function status {
    if [ -f "$FILE" ]; then
      echo "Running task $(task_name) with duration $(read_duration)s"
    else
      echo "not runnning"
    fi
}

case $1 in

  show)
    show
    ;;

  start)
    duration="${2:-$DURATION}"
    task_name=$(echo "" | bemenu_wrapper -p "Task Name:" -c -B 1 -W '0.2')
    echo "${duration}" > "$FILE"
    echo "${task_name}" >> "$FILE"
    status
    dunstify -u low "Starting $(task_name): ${duration}s"
    ;;

  stop)
    rm "$FILE"
    dunstify -u low "Pomodoro stopped"
    status
    ;;

  status)
    status
    ;;

  *)
    echo "unknown operation"
    exit 1
    ;;
esac

