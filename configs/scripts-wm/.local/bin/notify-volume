#!/bin/bash

set -e

# Arbitrary but unique message id
msgId="991049"

# see: https://unix.stackexchange.com/questions/132230/read-out-pulseaudio-volume-from-commandline-i-want-pactl-get-sink-volume

SINK=$(pactl list short | grep RUNNING | sed -e 's,^\([0-9][0-9]*\)[^0-9].*,\1,')

volume=$(pactl list sinks | grep '^[[:space:]]Volume:' | head -n $(( $SINK + 1 )) | tail -n 1 | sed -e 's,.* \([0-9][0-9]*\)%.*,\1,')

# Query amixer for the current volume and whether or not the speaker is muted
# volume=$(echo "$1" | tail -1 | awk '{print $5}' | sed 's/[^0-9]*//g')
mute=$(pactl list sinks | grep 'Mute:' | head -n $(( $SINK + 1 )) | awk '{ print $2 }' )
if [[ $volume == 0 || "$mute" == "yes" ]]; then
    # Show the sound muted notification
    dunstify -a "notify_volume" -u low -i "audio-volume-muted" -r "$msgId" "muted"
else
    # Show the volume notification
    dunstify -a "notify_volume" -u low -i "audio-volume-high" -h string:x-canonical-private-synchronous:audio -h int:value:"${volume}" "Volume: [${volume}%]"
fi

# Play the volume changed sound
canberra-gtk-play -i audio-volume-change -d "changeVolume"
